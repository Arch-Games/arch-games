#!/bin/bash
# aurcmp, Arkham 


usage () {
    echo "aurcmp: compare package versions between repo and AUR"
    echo "usage: aurcmp [OPTIONS]"
    echo
    echo "OPTIONS:"
    echo " -b:      compare both pkgver and pkgrel <default>"
    echo " -c:      colorful output"
    echo " -h:      show this help and quit"
    echo " -o:      ignore pkgrel, compare only pkgver"
    echo " -r REPO: compare packages from selected REPO"
    echo " -v:      verbose output (display also up to date/not found)"
    echo
}

aurcmp () {

    # Download temporary PKGBUILD
    PKGNAME="$1"
    URL="http://aur.archlinux.org/packages/$PKGNAME/$PKGNAME/PKGBUILD"
    wget -q "$URL"

    # Package not found in AUR
    if [[ ! -e PKGBUILD ]]; then
        if [[ -n "$VERBOSE" ]]; then
            if [[ -n "$COLOR" ]]; then
                echo -e  "$PKGNAME: \e[1;31mnot found in AUR\e[0m"
            else
                echo "$PKGNAME: not found in AUR"
            fi
        fi
        return 0
    fi

    # Compare versions
    AURVER="$(source PKGBUILD &>/dev/null; echo $pkgver-$pkgrel)"
    REPOVER="$(LANG=C pacman -Si $PKGNAME | awk '/^Version/ {print $3}')"
    if [[ -n "$ONLYVER" ]]; then
        AURVER="$(echo $AURVER | sed -e 's/-.*$//')"
        REPOVER="$(echo $REPOVER | sed -e 's/-.*$//')"
    fi

    RESULT=$(vercmp "$REPOVER" "$AURVER")

    if [[ "$RESULT" < 0 ]]; then
        if [[ -n "$COLOR" ]]; then
            echo -e "$PKGNAME: \e[1;32m$REPOVER => $AURVER\e[0m"
        else
            echo "$PKGNAME: $REPOVER => $AURVER"
        fi
    else
        if [[ -n "$VERBOSE" ]]; then
            echo "$PKGNAME: up to date"
        fi
    fi

    # Remove temporary file
    rm PKGBUILD
}

# Read CLI options
while getopts ":bchor:v" opt; do
    case "$opt" in
        "b")    
            ;;
        "c")
            COLOR="yes"
            ;;
        "h")    
            usage
            exit 0
            ;;
        "o")    
            ONLYVER="true"
            ;;
        "r")  
            REPO="$OPTARG"
            ;;
        "v")  
            VERBOSE="true"
            ;;
        "?")
            echo "Invalid option: -$OPTARG" >&2
            usage
            exit 1
            ;;
        ":")
            echo "Option -$OPTARG requires an argument." >&2
            usage
            exit 1
            ;;
        *)
            echo "Unknown error while processing options." >&2
            ;;
    esac
done

# Backup preexistent PKGBUILD
if [[ -e PKGBUILD ]]; then
    mv PKGBUILD{,.bak}
fi

# Set default repo
REPO=${REPO:-"arch-games"}

# Main loop
for pkg in $(pacman -Slq $REPO); do 
    aurcmp "$pkg"
done

exit 0
