diff -au StepMania-3.9-src-orig/src/GameManager.cpp StepMania-3.9-src/src/GameManager.cpp
--- StepMania-3.9-src-orig/src/GameManager.cpp	2004-09-09 19:58:52.000000000 +0200
+++ StepMania-3.9-src/src/GameManager.cpp	2007-11-15 15:09:59.000000000 +0100
@@ -49,7 +49,7 @@
 const int PNM9_COL_SPACING = 32; 
 
 struct {
-	char *name;
+	const char *name;
 	int NumTracks;
 } const StepsTypes[NUM_STEPS_TYPES] = {
 	{ "dance-single",	4 },
diff -au StepMania-3.9-src-orig/src/NotesLoaderBMS.cpp StepMania-3.9-src/src/NotesLoaderBMS.cpp
--- StepMania-3.9-src-orig/src/NotesLoaderBMS.cpp	2005-09-30 10:09:01.000000000 +0200
+++ StepMania-3.9-src/src/NotesLoaderBMS.cpp	2007-11-15 14:59:15.000000000 +0100
@@ -579,7 +579,7 @@
 				switch( iBMSTrackNo )
 				{
 				case 1:	{ // background music track
-					float fBeatOffset = fBeatOffset = NoteRowToBeat( (float)iStepIndex );
+					float fBeatOffset = NoteRowToBeat( (float)iStepIndex );
 					if( fBeatOffset > 10 )	// some BPMs's play the music again at the end.  Why?  Who knows...
 						break;
 					float fBPS;
diff -au StepMania-3.9-src-orig/src/NotesLoaderDWI.cpp StepMania-3.9-src/src/NotesLoaderDWI.cpp
--- StepMania-3.9-src-orig/src/NotesLoaderDWI.cpp	2004-09-12 07:56:23.000000000 +0200
+++ StepMania-3.9-src/src/NotesLoaderDWI.cpp	2007-11-15 14:56:36.000000000 +0100
@@ -501,9 +501,8 @@
 				BlacklistedImages.insert( sub.c_str() );
 			}
 		}
-		else
-			// do nothing.  We don't care about this value name
-			;
+		else {} // do nothing.  We don't care about this value name
+
 	}
 
 	return true;
diff -au StepMania-3.9-src-orig/src/StepMania.cpp StepMania-3.9-src/src/StepMania.cpp
--- StepMania-3.9-src-orig/src/StepMania.cpp	2005-10-28 01:40:53.000000000 +0200
+++ StepMania-3.9-src/src/StepMania.cpp	2007-11-15 14:53:03.000000000 +0100
@@ -351,8 +351,8 @@
 
 struct VideoCardDefaults
 {
-	char *szDriverRegex;
-	char *szVideoRenderers;
+	const char *szDriverRegex;
+	const char *szVideoRenderers;
 	int iWidth;
 	int iHeight;
 	int iDisplayColor;
diff -au StepMania-3.9-src-orig/src/StepMania.xpm StepMania-3.9-src/src/StepMania.xpm
--- StepMania-3.9-src-orig/src/StepMania.xpm	2002-11-17 08:36:54.000000000 +0100
+++ StepMania-3.9-src/src/StepMania.xpm	2007-11-15 15:04:34.000000000 +0100
@@ -1,5 +1,5 @@
 /* XPM */
-static char *icon[] = {
+static const char *icon[] = {
 "32 32 21 1",
 /* colors */
 "  c #000000",
diff -au StepMania-3.9-src-orig/src/pcre/pcre.c StepMania-3.9-src/src/pcre/pcre.c
--- StepMania-3.9-src-orig/src/pcre/pcre.c	2004-08-07 21:02:41.000000000 +0200
+++ StepMania-3.9-src/src/pcre/pcre.c	2007-11-15 15:29:31.000000000 +0100
@@ -4197,7 +4197,7 @@
 ptr = (const uschar *)(pattern - 1);
 while ((c = *(++ptr)) != 0)
   {
-  int min, max;
+  int min = 0, max = 0;
   int class_optcount;
   int bracket_length;
   int duplength;
diff -au StepMania-3.9-src-orig/src/archutils/Unix/BacktraceNames.cpp StepMania-3.9-src/src/archutils/Unix/BacktraceNames.cpp
--- StepMania-3.9-src-orig/src/archutils/Unix/BacktraceNames.cpp	2005-09-30 10:09:25.000000000 +0200
+++ StepMania-3.9-src/src/archutils/Unix/BacktraceNames.cpp	2007-11-15 15:42:14.000000000 +0100
@@ -83,7 +83,7 @@
 		ShortenedPath = CString("(") + ShortenedPath + ")";
 	}
 
-	CString ret = ssprintf( "%0*lx: ", int(sizeof(void*)*2), Address );
+	CString ret = ssprintf( "%0*lx: ", int(sizeof(void*)*2), (long unsigned int)Address );
 	if( Symbol != "" )
 		ret += Symbol + " ";
 	ret += ShortenedPath;
diff -au StepMania-3.9-src-orig/src/archutils/Unix/CrashHandler.cpp StepMania-3.9-src/src/archutils/Unix/CrashHandler.cpp
--- StepMania-3.9-src-orig/src/archutils/Unix/CrashHandler.cpp	2005-10-17 03:39:27.000000000 +0200
+++ StepMania-3.9-src/src/archutils/Unix/CrashHandler.cpp	2007-11-15 15:45:05.000000000 +0100
@@ -102,9 +102,9 @@
 	GetExecutableName( path, sizeof(path) );
 
 	/* Use execve; it's the lowest-level of the exec calls.  The others may allocate. */
-	char *argv[3] = { path, CHILD_MAGIC_PARAMETER, NULL };
+	const char *argv[3] = { path, CHILD_MAGIC_PARAMETER, NULL };
 	char *envp[1] = { NULL };
-	execve( path, argv, envp );
+	execve( path, (char* const*)argv, envp );
 
 	/* If we got here, the exec failed.  We can't call strerror. */
 	// safe_print(fileno(stderr), "Crash handler execl(", path, ") failed: ", strerror(errno), "\n", NULL);
diff -au StepMania-3.9-src-orig/src/archutils/Unix/CrashHandlerChild.cpp StepMania-3.9-src/src/archutils/Unix/CrashHandlerChild.cpp
--- StepMania-3.9-src-orig/src/archutils/Unix/CrashHandlerChild.cpp	2004-10-23 00:41:44.000000000 +0200
+++ StepMania-3.9-src/src/archutils/Unix/CrashHandlerChild.cpp	2007-11-15 15:47:46.000000000 +0100
@@ -175,7 +175,7 @@
 
 		if( ret == 0 )
 		{
-			fprintf( stderr, "Crash handler: EOF communicating with parent\n", strerror(errno) );
+			fprintf( stderr, "Crash handler: EOF communicating with parent: %s\n", strerror(errno) );
 			return false;
 		}
 
diff -au StepMania-3.9-src-orig/src/arch/LoadingWindow/LoadingWindow_GtkModule.cpp StepMania-3.9-src/src/arch/LoadingWindow/LoadingWindow_GtkModule.cpp
--- StepMania-3.9-src-orig/src/arch/LoadingWindow/LoadingWindow_GtkModule.cpp	2004-09-14 02:40:10.000000000 +0200
+++ StepMania-3.9-src/src/arch/LoadingWindow/LoadingWindow_GtkModule.cpp	2007-11-15 15:03:24.000000000 +0100
@@ -20,7 +20,7 @@
 	window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
 	gtk_window_set_position( GTK_WINDOW(window), GTK_WIN_POS_CENTER );
 	gtk_widget_realize(window);
-	loadmap = gdk_pixmap_create_from_xpm_d(window->window,NULL,NULL,loading);
+	loadmap = gdk_pixmap_create_from_xpm_d(window->window,NULL,NULL,(gchar **)loading);
 	loadimage = gtk_image_new_from_pixmap(loadmap,NULL);
 	label = gtk_label_new(NULL);
 	gtk_label_set_justify(GTK_LABEL(label),GTK_JUSTIFY_CENTER);
diff -au StepMania-3.9-src-orig/src/arch/LoadingWindow/LoadingWindow_SDL.cpp StepMania-3.9-src/src/arch/LoadingWindow/LoadingWindow_SDL.cpp
--- StepMania-3.9-src-orig/src/arch/LoadingWindow/LoadingWindow_SDL.cpp	2004-08-28 20:38:49.000000000 +0200
+++ StepMania-3.9-src/src/arch/LoadingWindow/LoadingWindow_SDL.cpp	2007-11-15 15:05:20.000000000 +0100
@@ -29,7 +29,7 @@
 	SDL_WM_SetCaption("Loading StepMania", "");
 
 	CString error;
-	RageSurface *srf = RageSurface_Load_XPM( icon, error );
+	RageSurface *srf = RageSurface_Load_XPM( (char* const*)icon, error );
 
 	uint32_t color;
 	if( srf->fmt.MapRGBA( 0xFF, 0, 0xFF, 0xFF, color ) )
@@ -54,7 +54,7 @@
 
 
 	/* Load the BMP - we need its dimensions */
-    srf = RageSurface_Load_XPM( loading, error );
+    srf = RageSurface_Load_XPM( (char* const*)loading, error );
     if( srf == NULL ) // XXX SDL_GetError
         RageException::Throw( "Couldn't load loading.bmp: %s",SDL_GetError() );
 
diff -au StepMania-3.9-src-orig/src/arch/LoadingWindow/loading.xpm StepMania-3.9-src/src/arch/LoadingWindow/loading.xpm
--- StepMania-3.9-src-orig/src/arch/LoadingWindow/loading.xpm	2002-11-18 22:37:58.000000000 +0100
+++ StepMania-3.9-src/src/arch/LoadingWindow/loading.xpm	2007-11-15 15:00:11.000000000 +0100
@@ -1,5 +1,5 @@
 /* XPM */
-static char *loading[] = {
+static const char *loading[] = {
 /* width height ncolors chars_per_pixel */
 "468 62 128 2",
 /* colors */
diff -au StepMania-3.9-src-orig/src/arch/MemoryCard/MemoryCardDriverThreaded_Linux.cpp StepMania-3.9-src/src/arch/MemoryCard/MemoryCardDriverThreaded_Linux.cpp
--- StepMania-3.9-src-orig/src/arch/MemoryCard/MemoryCardDriverThreaded_Linux.cpp	2004-08-17 08:35:02.000000000 +0200
+++ StepMania-3.9-src/src/arch/MemoryCard/MemoryCardDriverThreaded_Linux.cpp	2007-11-15 15:08:30.000000000 +0100
@@ -441,9 +441,9 @@
 		// Don't include a path.  The usbutils installer script installs 
 		// to /usr/local/sbin and the Debian package installs to /usr/sbin/.
 		CString sCommand = "lsusb";
-		char *szParams[] = { "lsusb", "-v", NULL }; 
+		const char *szParams[] = { "lsusb", "-v", NULL }; 
 		CString sOutput;
-		RunProgram( sCommand, szParams, sOutput );
+		RunProgram( sCommand, (char * const*)szParams, sOutput );
 		
 		CStringArray vsLines;
 		split( sOutput, "\n", vsLines );
diff -au StepMania-3.9-src-orig/src/arch/MovieTexture/MovieTexture_FFMpeg.cpp StepMania-3.9-src/src/arch/MovieTexture/MovieTexture_FFMpeg.cpp
--- StepMania-3.9-src-orig/src/arch/MovieTexture/MovieTexture_FFMpeg.cpp	2007-11-15 19:45:39.000000000 +0100
+++ StepMania-3.9-src/src/arch/MovieTexture/MovieTexture_FFMpeg.cpp	2007-11-15 20:29:48.000000000 +0100
@@ -429,7 +429,7 @@
 
 static avcodec::AVStream *FindVideoStream( avcodec::AVFormatContext *m_fctx )
 {
-    for( int stream = 0; stream < m_fctx->nb_streams; ++stream )
+    for( unsigned int stream = 0; stream < m_fctx->nb_streams; ++stream )
 	{
 		avcodec::AVStream *enc = m_fctx->streams[stream];
 #if (LIBAVCODEC_BUILD >= 4754)
--- StepMania-3.9-src-orig/src/arch/Sound/ALSA9Dynamic.h	2007-11-26 18:25:16.000000000 +0100
+++ StepMania-3.9-src/src/arch/Sound/ALSA9Dynamic.h	2007-12-13 06:04:36.000000000 +0100
@@ -12,11 +12,11 @@
 #include "ALSA9Functions.h"
 #undef FUNC
 
-#define dsnd_pcm_hw_params_alloca(ptr) { assert(ptr); *ptr = (snd_pcm_hw_params_t *) alloca(dsnd_pcm_hw_params_sizeof()); memset(*ptr, 0, dsnd_pcm_hw_params_sizeof()); }
-#define dsnd_pcm_sw_params_alloca(ptr) { assert(ptr); *ptr = (snd_pcm_sw_params_t *) alloca(dsnd_pcm_sw_params_sizeof()); memset(*ptr, 0, dsnd_pcm_sw_params_sizeof()); }
-#define dsnd_pcm_info_alloca(ptr) { assert(ptr); *ptr = (snd_pcm_info_t *) alloca(dsnd_pcm_info_sizeof()); memset(*ptr, 0, dsnd_pcm_info_sizeof()); }
-#define dsnd_ctl_card_info_alloca(ptr) { assert(ptr); *ptr = (snd_ctl_card_info_t *) alloca(dsnd_ctl_card_info_sizeof()); memset(*ptr, 0, dsnd_ctl_card_info_sizeof()); }
-#define dsnd_pcm_status_alloca(ptr) do { assert(ptr); *ptr = (snd_pcm_status_t *) alloca(dsnd_pcm_status_sizeof()); memset(*ptr, 0, dsnd_pcm_status_sizeof()); } while (0)
+#define dsnd_pcm_hw_params_alloca(ptr) { *ptr = (snd_pcm_hw_params_t *) alloca(dsnd_pcm_hw_params_sizeof()); memset(*ptr, 0, dsnd_pcm_hw_params_sizeof()); }
+#define dsnd_pcm_sw_params_alloca(ptr) { *ptr = (snd_pcm_sw_params_t *) alloca(dsnd_pcm_sw_params_sizeof()); memset(*ptr, 0, dsnd_pcm_sw_params_sizeof()); }
+#define dsnd_pcm_info_alloca(ptr) { *ptr = (snd_pcm_info_t *) alloca(dsnd_pcm_info_sizeof()); memset(*ptr, 0, dsnd_pcm_info_sizeof()); }
+#define dsnd_ctl_card_info_alloca(ptr) { *ptr = (snd_ctl_card_info_t *) alloca(dsnd_ctl_card_info_sizeof()); memset(*ptr, 0, dsnd_ctl_card_info_sizeof()); }
+#define dsnd_pcm_status_alloca(ptr) do { *ptr = (snd_pcm_status_t *) alloca(dsnd_pcm_status_sizeof()); memset(*ptr, 0, dsnd_pcm_status_sizeof()); } while (0)
 
 CString LoadALSA();
 void UnloadALSA();
--- StepMania-3.9-src-old/src/ActorCommands.h	2004-06-08 02:47:52.000000000 +0200
+++ StepMania-3.9-src/src/ActorCommands.h	2008-07-24 21:57:04.000000000 +0200
@@ -17,9 +17,9 @@
 	bool bColorIsValid;	// true if c is a valid HTML-type color
 
 	operator const CString () const		{ return s; };
-	operator const float () const		{ return f; };
-	operator const int () const			{ return i; };
-	operator const bool () const		{ return b; };
+	operator float () const		{ return f; };
+	operator int () const			{ return i; };
+	operator bool () const		{ return b; };
 	operator const RageColor () const	{ return c; };
 };
 
--- StepMania-3.9-src-old/src/ThemeManager.h	2004-08-10 06:33:36.000000000 +0200
+++ StepMania-3.9-src/src/ThemeManager.h	2008-07-24 21:57:40.000000000 +0200
@@ -111,7 +111,7 @@
 public:
 	void Update() { m_fValue = (float)atof( m_sValue ); }
 	CachedThemeMetricF( CString sClassName, CString sValueName ) : CachedThemeMetric( sClassName, sValueName ) {}
-    operator const float () const		{ ASSERT(m_bInited);	return m_fValue; };
+    operator float () const		{ ASSERT(m_bInited);	return m_fValue; };
 };
 
 class CachedThemeMetricI : public CachedThemeMetric
@@ -120,7 +120,7 @@
 public:
 	void Update() { m_iValue = atoi( m_sValue ); }
 	CachedThemeMetricI( CString sClassName, CString sValueName ) : CachedThemeMetric( sClassName, sValueName ) {}
-	operator const int () const			{ ASSERT(m_bInited);	return m_iValue; };
+	operator int () const			{ ASSERT(m_bInited);	return m_iValue; };
 };
 
 class CachedThemeMetricB : public CachedThemeMetric
@@ -129,7 +129,7 @@
 public:
 	void Update() { m_bValue = atoi( m_sValue ) != 0; }
 	CachedThemeMetricB( CString sClassName, CString sValueName ) : CachedThemeMetric( sClassName, sValueName ) {}
-    operator const bool () const		{ ASSERT(m_bInited);	return m_bValue; };
+    operator bool () const		{ ASSERT(m_bInited);	return m_bValue; };
 };
 
 		
