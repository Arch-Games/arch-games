# Maintainer: Tiago Pierezan Camargo <tcamargo@gmail.com
# Contributor: Paul Bredbury <brebs@sent.com>
# Contributor: Benjamin Dirks <asaru[at]wtnet[dot]de>

pkgname=worldofpadman
pkgver=1.2
pkgrel=2
pkgdesc="Cartoon-style multiplayer first-person shooter"
arch=(i686 x86_64)
url="http://www.worldofpadman.com/"
license=('GPL' 'custom')
depends=('curl' 'libogg' 'libvorbis' 'mesa' 'openal' 'sdl')
makedepends=('unzip')
source=(ftp://ftp.snt.utwente.nl/pub/games/worldofpadman/linux/worldofpadman.run
        ftp://ftp.snt.utwente.nl/pub/games/worldofpadman/wop_padpack.zip
        'http://wop-engine.svn.sourceforge.net/viewvc/wop-engine/tags/patch1_2(released071206)_nonWindows.tar.gz?view=tar'
        ftp://ftp.snt.utwente.nl/pub/games/worldofpadman/linux/wop_patch_1_2.run
        worldofpadman.desktop)
noextract=('patch1_2(released071206)_nonWindows.tar.gz?view=tar')
md5sums=('c7650414d7865ddac26ada6b3f7b8cc9'
         'c59e212b29b28e0162af33dfb118344c'
         'ac60b804d41a7ac032476ea31d79e1b3'
         '3468fc91889795471bc68e35ea334614'
         'c5bc8f05859eaa2babfb7683f4c68dab')

_gamedir="/usr/share/${pkgname}"

build() {
  cd ${srcdir}

  # Based on http://sources.gentoo.org/viewcvs.py/gentoo-x86/eclass/eutils.eclass
  for _f in {worldofpadman,wop_patch_1_2}.run ; do
    _skip_lines=$(grep -a offset=.*head.*wc $_f | awk '{print $3}' | head -n 1)
    _skip_chars=$(head -n ${_skip_lines} $_f | wc -c)
    dd ibs=${_skip_chars} skip=1 obs=1024 conv=sync if=$_f | tar --no-same-owner -xzf - || return 1
  done

  tar -xf readme.tar || return 1

  mkdir wop
  cd wop
  tar -xf ../wop-data.tar || return 1
  tar -xf ../wop-data-${pkgver}.tar || return 1
  tar -xf ../extras.tar || return 1
  unzip -qo ../wop_padpack.zip || return 1
  mv PadPack.txt ..

  ## wop-engine
  cd ${srcdir}
  if [ ! -d wop-engine-${pkgver} ]; then
      tar xfz 'patch1_2(released071206)_nonWindows.tar.gz?view=tar'
      mv 'patch1_2(released071206)_nonWindows' wop-engine-${pkgver}
  fi

  # Compile
  cd wop-engine-${pkgver}
  make BUILD_CLIENT=1 BUILD_SERVER=1 DEFAULT_BASEDIR="${_gamedir}" || return 1

  # Executables
  cd build/release-*
  install -D -m755 wop-engine.* ${pkgdir}/usr/bin/${pkgname} || return 1
  install -D -m755 wopded.* ${pkgdir}/usr/bin/${pkgname}-ded || return 1

  # Data
  cd ${srcdir}
  # Using "read", so can handle filenames containing spaces
  find wop -type f | while read _f ; do
    install -D -m644 "$_f" "${pkgdir}/$_gamedir/$_f" || return 1
  done
  # Return from the function, since install's return just exits the loop
  # See http://fvue.nl/wiki/Bash:_Error_handling
  [ $? -gt 0 ] && return 1

  # Desktop
  install -D -m644 ${srcdir}/wop.png ${pkgdir}/usr/share/pixmaps/$pkgname.png || return 1
  install -D -m644 ${srcdir}/$pkgname.desktop ${pkgdir}/usr/share/applications/$pkgname.desktop || return 1

  # Docs
  cd ${srcdir}
  # Using "read", so can handle filenames containing spaces
  find readme -type f | while read _f ; do
    install -D -m644 "$_f" "${pkgdir}/usr/share/doc/$pkgname/$_f" || return 1
  done
  # Return from the function, since install's return just exits the loop
  # See http://fvue.nl/wiki/Bash:_Error_handling
  [ $? -gt 0 ] && return 1

  install -m644 -t ${pkgdir}/usr/share/doc/$pkgname/ PadPack.txt readme.html wop_patch_*.txt || return 1

  # License
  install -D -m644 ${srcdir}/copyright_en.txt ${pkgdir}/usr/share/licenses/$pkgname/COPYING || return 1
}
