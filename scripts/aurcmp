#!/bin/bash
# aurcmp, Arkham 

usage () {
    echo "aurcmp: compare package versions between repo and AUR"
    echo "usage: aurcmp [OPTIONS]"
    echo
    echo "OPTIONS:"
    echo " -b:      compare both pkgver and pkgrel <default>"
    echo " -c:      colorful output"
    echo " -h:      show this help and quit"
    echo " -o:      ignore pkgrel, compare only pkgver"
    echo " -r REPO: compare packages from selected REPO"
    echo " -v:      verbose output (display also up to date/not found)"
    echo
}

aurcmp () {

    # Create temporary url 
    pkgname="$1"
    url="http://aur.archlinux.org/packages/$pkgname/$pkgname/PKGBUILD"

    PKGBUILD=$(wget -q -O - "$url") || {
    
        # Package not found in AUR
        if [[ "$VERBOSE" == "true" ]]; then
            if [[ "$COLOR" == "true" ]]; then
                echo -e "$pkgname: \e[1;31mnot found in AUR\e[0m"
            else
                echo "$pkgname: not found in AUR"
            fi
        fi
        return 0
    }

    # Compare versions
    aurver="$(eval "$PKGBUILD" &>/dev/null; echo "$pkgver-$pkgrel")" || true
    repover="$(LANG=C pacman -Si "$pkgname" | awk '/^Version/ {print $3}')"
    if [[ "$ONLYVER" == "true" ]]; then
        aurver="$(echo "$aurver" | cut -d'-' -f1)"
        repover="$(echo "$repover" | cut -d'-' -f1)"
    fi

    result=$(vercmp "$repover" "$aurver") || true

    if [[ "$result" < 0 ]]; then
        if [[ "$COLOR" == "true" ]]; then
            echo -e "$pkgname: \e[1;32m$repover => $aurver\e[0m"
        else
            echo "$pkgname: $repover => $aurver"
        fi
    else
        if [[ "$VERBOSE" == "true" ]]; then
            echo "$pkgname: up to date"
        fi
    fi
}

# Set some bash safety options
set -o nounset
set -o errexit

# Initialize flags
COLOR="false"
ONLYVER="false"
VERBOSE="false"

# Read CLI options
while getopts ":bchor:v" opt; do
    case "$opt" in
        "b")    
            ;;
        "c")
            COLOR="true"
            ;;
        "h")    
            usage
            exit 0
            ;;
        "o")    
            ONLYVER="true"
            ;;
        "r")  
            REPO="$OPTARG"
            ;;
        "v")  
            VERBOSE="true"
            ;;
        "?")
            echo "Invalid option: -$OPTARG" >&2
            usage
            exit 1
            ;;
        ":")
            echo "Option -$OPTARG requires an argument." >&2
            usage
            exit 1
            ;;
        *)
            echo "Unknown error while processing options." >&2
            exit 1
            ;;
    esac
done

# Set default repo
REPO=${REPO:-"arch-games"}

# Main loop
for pkg in $(pacman -Slq $REPO); do 
    aurcmp "$pkg"
done

exit 0
